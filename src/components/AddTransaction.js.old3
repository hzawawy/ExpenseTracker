// Updated AddTransaction.js - Using native permissions only
import React from 'react';
import { ScrollView, View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';
import { useColors } from '../styles/colors';
import { CATEGORIES, FREQUENCIES } from '../constants';
import { ensureReceiptScanPermissions } from '../utils/permissions'; // Updated import

const AddTransaction = ({
  newTransaction,
  setNewTransaction,
  addTransaction,
  scanReceipt,
  isProcessingReceipt,
  ocrSettings,
}) => {
  const colors = useColors();
  
  // Handle receipt scanning with permission check
  const handleScanReceipt = async () => {
    try {
      console.log('Scan receipt button pressed');
      
      // Check and request permissions if needed
      const hasPermissions = await ensureReceiptScanPermissions();
      
      if (!hasPermissions) {
        console.log('Permissions not granted, cannot scan');
        Alert.alert(
          'Permissions Required',
          'Camera and storage permissions are required to scan receipts. Please enable them in your device settings.',
          [{ text: 'OK' }]
        );
        return;
      }
      
      console.log('Permissions granted, starting scan');
      // Proceed with scanning
      scanReceipt();
    } catch (error) {
      console.error('Permission error:', error);
      Alert.alert(
        'Error',
        'Unable to access camera. Please check your device settings.',
        [{ text: 'OK' }]
      );
    }
  };

  const themedStyles = StyleSheet.create({
    formContainer: {
      backgroundColor: colors.background,
      padding: 16,
    },
    formTitle: {
      fontSize: 24,
      fontWeight: 'bold',
      color: colors.text,
      marginBottom: 20,
      textAlign: 'center',
    },
    scanButton: {
      backgroundColor: colors.primary,
      padding: 16,
      borderRadius: 8,
      marginBottom: 16,
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center',
    },
    scanButtonDisabled: {
      backgroundColor: colors.textTertiary,
    },
    scanButtonText: {
      color: '#FFFFFF',
      fontSize: 16,
      fontWeight: 'bold',
      marginLeft: 8,
    },
    processingIndicator: {
      backgroundColor: colors.surface,
      padding: 16,
      borderRadius: 8,
      marginBottom: 16,
      borderColor: colors.border,
      borderWidth: 1,
    },
    processingText: {
      color: colors.text,
      fontSize: 16,
      fontWeight: 'bold',
      textAlign: 'center',
    },
    processingSubtext: {
      color: colors.textSecondary,
      fontSize: 14,
      textAlign: 'center',
      marginTop: 4,
    },
    typeContainer: {
      flexDirection: 'row',
      marginBottom: 16,
    },
    typeButton: {
      flex: 1,
      padding: 16,
      borderRadius: 8,
      marginHorizontal: 4,
      alignItems: 'center',
      backgroundColor: colors.surface,
      borderColor: colors.border,
      borderWidth: 1,
    },
    expenseActive: {
      backgroundColor: colors.error,
      borderColor: colors.error,
    },
    incomeActive: {
      backgroundColor: colors.success,
      borderColor: colors.success,
    },
    typeText: {
      fontSize: 16,
      fontWeight: 'bold',
      color: colors.text,
    },
    input: {
      backgroundColor: colors.surface,
      borderColor: colors.border,
      borderWidth: 1,
      borderRadius: 8,
      padding: 16,
      fontSize: 16,
      color: colors.text,
      marginBottom: 16,
    },
    addButton: {
      backgroundColor: colors.primary,
      padding: 16,
      borderRadius: 8,
      alignItems: 'center',
      marginTop: 8,
    },
    addButtonText: {
      color: '#FFFFFF',
      fontSize: 18,
      fontWeight: 'bold',
    },
  });

  return (
    <ScrollView style={themedStyles.formContainer}>
      <Text style={themedStyles.formTitle}>Add Transaction</Text>
      
      <TouchableOpacity 
        style={[themedStyles.scanButton, isProcessingReceipt && themedStyles.scanButtonDisabled]} 
        onPress={handleScanReceipt}
        disabled={isProcessingReceipt}
      >
        <Text style={themedStyles.scanButtonText}>
          {isProcessingReceipt ? 'ðŸ”„ Processing...' : 'ðŸ“· Scan Receipt'}
        </Text>
      </TouchableOpacity>

      {isProcessingReceipt && (
        <View style={themedStyles.processingIndicator}>
          <Text style={themedStyles.processingText}>ðŸ¤– Analyzing receipt...</Text>
          <Text style={themedStyles.processingSubtext}>
            {ocrSettings.multipleAttempts ? 'Multiple attempts enabled' : 'Single attempt mode'}
          </Text>
          <Text style={themedStyles.processingSubtext}>
            Advanced parsing: {ocrSettings.parseMode === 'advanced' ? 'ON' : 'OFF'}
          </Text>
        </View>
      )}
      
      <View style={themedStyles.typeContainer}>
        <TouchableOpacity
          style={[themedStyles.typeButton, newTransaction.type === 'expense' && themedStyles.expenseActive]}
          onPress={() => setNewTransaction({...newTransaction, type: 'expense', isRecurring: false})}
        >
          <Text style={themedStyles.typeText}>ðŸ’¸ Expense</Text>
        </TouchableOpacity>
        <TouchableOpacity
          style={[themedStyles.typeButton, newTransaction.type === 'income' && themedStyles.incomeActive]}
          onPress={() => setNewTransaction({...newTransaction, type: 'income'})}
        >
          <Text style={themedStyles.typeText}>ðŸ’° Income</Text>
        </TouchableOpacity>
      </View>

      <TextInput
        style={themedStyles.input}
        placeholder="Amount (e.g., 50.00)"
        placeholderTextColor={colors.textTertiary}
        value={newTransaction.amount}
        onChangeText={(text) => setNewTransaction({...newTransaction, amount: text})}
        keyboardType="numeric"
      />

      <TextInput
        style={themedStyles.input}
        placeholder="Description"
        placeholderTextColor={colors.textTertiary}
        value={newTransaction.description}
        onChangeText={(text) => setNewTransaction({...newTransaction, description: text})}
      />

      <TouchableOpacity style={themedStyles.addButton} onPress={addTransaction}>
        <Text style={themedStyles.addButtonText}>Add Transaction</Text>
      </TouchableOpacity>
    </ScrollView>
  );
};

export default AddTransaction;
